#----------------------------------------------------------------- show network cluster ----------------------------------------------
set pubsub "192.168.0.231 dev-uccx-sub01.evdev.com dev-uccx-sub01 Subscriber contactcenterxpress DBSub authenticated using TCP since Sun Nov 18 01:10:08 2018
192.168.0.230 dev-uccx-pub.evdev.com dev-uccx-pub Publisher DBPub authenticated

Server Table (processnode) Entries
----------------------------------
dev-uccx-pub   
dev-uccx-sub01"

# split across lines
set splits [split $pubsub "\n"]

# for each node
foreach item $splits {
	if { [string first "Publisher" $item] != -1 } {
		puts "Publisher Present"
		# find IP address
		set ips [regexp -all -inline {\d+\.\d+\.\d+\.\d+} $item]
		# separate each space separated string
		set itm [regexp -all -inline {\S+} $item]
		foreach val $itm {
			# check whether this is a valid domain or not
			if { [regexp {[A-Za-z0-9-]+\.[A-Za-z0-9-]+\.[A-Za-z0-9-]+} $val] == 1} {
				# valid domain found
				set dns [regexp -all -inline {[A-Za-z0-9-]+\.[A-Za-z0-9-]+\.[A-Za-z0-9-]+} $val]
			}
		}
		# assigning variables
		puts "Found DNS $dns"
		set publisher "uccxs:name:$dns"
		set pubprimary "uccxs:is_primary:1"
		set pubnodetype "uccxs:node_type:contactcenterxpress"
	} elseif { [string first "Subscriber" $item ] != -1 } {
		puts "Subscriber Present"
		set ips [regexp -all -inline {\d+\.\d+\.\d+\.\d+} $item]
		# separate each space separated string
		set itm [regexp -all -inline {\S+} $item]
		foreach val $itm {
			# check whether this is a valid domain or not
			if { [regexp {[A-Za-z0-9-]+\.[A-Za-z0-9-]+\.[A-Za-z0-9-]+} $val] == 1} {
				# valid domain found
				set dns [regexp -all -inline {[A-Za-z0-9-]+\.[A-Za-z0-9-]+\.[A-Za-z0-9-]+} $val]
			}
		}
		puts "Found DNS $dns"
		set publisher "uccxs:name:$dns"
		set pubprimary "uccxs:is_primary:0"
		set pubnodetype "uccxs:node_type:contactcenterxpress"
	}
}




#--------------------------------------------------------- show uccx version ---------------------------------------------------------
# our sample outputs
set version " Active UCCX Version: 11.6.1.10000-51
 Inactive UCCX Version: NA

 Command successful."


# separate each line
set line [split $version "\n"]

# for each line, check have key value pairs
foreach item $line {
	# check for key value string, only one colon
	if { [string first ":" $item] != -1 } {
		# find key value pair
		set keyval [split $item ":"]
		set key [lindex $keyval 0]
		set val [lindex $keyval 1]
		if { [string first "Active" $key] != -1 } {
			set pubactive "uccxs:active_version: $val"
			puts $pubactive 
		} elseif { [string first "Inactive" $key] != -1 } {
			set pubinactive "uccxs:inactive_version: $val"
			puts $pubinactive
		}
	}
}

#-------------------------------------------------------- ntp utils ----------------------------------------------------------------
set ntp "192.168.0.231
dev-uccx-sub01.evdev.com"
set lines [split $ntp "\n"]
# i for saving variable from ntp1
set i 1
foreach line $lines {
	# check whether it's domain/IP or not
	set nps [regexp -all -inline {(\d+\.\d+\.\d+\.\d+|[A-Za-z0-9-]+\.[A-Za-z0-9-]+\.[A-Za-z0-9-]+)} $line]
	set nps [lsort -unique $nps]
	set pubntp$i "uccxs:ntp$i:$nps"
	incr i
}
while { $i < 6 } {
	set pubntp$i "uccxs:ntp$i:NA"
	incr i
}
puts $pubntp1
puts $pubntp2
puts $pubntp3
puts $pubntp4
puts $pubntp5

#--------------------------------------------------------- show hardware -------------------------------------------------------------
set hw "
HW Platform       : VMware Virtual Machine
Processors        : 2
Type              : Intel(R) Xeon(R) CPU           E5645  @ 2.40GHz
CPU Speed         : 2400
Memory            : 10240 MBytes
Object ID         : 1.3.6.1.4.1.9.1.1348
OS Version        : UCOS 6.0.0.0-2.i386
Serial Number     : VMware-56 4d af 6c 7c 25 e0 d0-f1 dd 44 b1 a0 ad b6 87

RAID Version      :
No RAID controller information is available

BIOS Information  :
PhoenixTechnologiesLTD 6.00 04/14/2014

RAID Details      :
No RAID information is available
-----------------------------------------------------------------------
Physical device information
-----------------------------------------------------------------------
Number of Disks   : 1
Hard Disk #1
Size (in GB)      : 146

Partition Details :

Disk /dev/sda: 19059 cylinders, 255 heads, 63 sectors/track
Units = sectors of 512 bytes, counting from 0

   Device Boot    Start       End   #sectors  Id  System
/dev/sda1   *       128  54984703   54984576  83  Linux
/dev/sda2      54984704 110034943   55050240  83  Linux
/dev/sda3     110034944 110559231     524288  83  Linux
/dev/sda4     110559232 306182834  195623603   5  Extended
/dev/sda5     110559360 114687936    4128577  82  Linux swap / Solaris
/dev/sda6     114688000 306182834  191494835  83  Linux"
